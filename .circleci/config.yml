version: 2
jobs:
  build-code:
    docker:
      - image: node:argon
    steps:
      - checkout
      - run:
            name: install jq
            command: apt-get update && apt-get install jq
      - run:
            name: authenticate with Vault using github
            command: |
              echo "{\n \"token\" : \"$GITHUB_ACCESS_TOKEN\"\n}"  > payload.json
              echo 'export VAULT_TOKEN=$(curl --request POST --data @payload.json vault.dev.dnt.org/v1/auth/github/login | jq -r .auth.client_token)' >> $BASH_ENV
              curl -k --header "X-Vault-Token: $VAULT_TOKEN" vault.dev.dnt.org/v1/secret/geoserver/dev/mongo_uri | jq .data.value
      - run:
           name: echo nodejs information
           command: |
             echo "node version $(node -v) running"
             echo "npm version $(npm -v) running"
             echo "npm registry $(npm config get registry)"
      - run:
          name: install
          command: npm install

      - run:
          name: lint
          command: npm run lint

      - run:
          name: test
          command: |
            export MONGO_URI=$(curl -k --header "X-Vault-Token: $VAULT_TOKEN" vault.dev.dnt.org/v1/secret/geoserver/dev/mongo_uri | jq .data.value)
            npm test

      - run:
           name: notify slack on failure
           when: on_fail
           command: |
             chmod +x .circleci/notify-slack.sh
             ./.circleci/notify-slack.sh Geoserver build-publish-deploy false

      - run:
           name: notify slack on sucess
           when: on_success
           command: |
             chmod +x .circleci/notify-slack.sh
             ./.circleci/notify-slack.sh Geoserver build-publish-deploy true


workflows:
  version: 2
  build-publish-deploy:
    jobs:
      - build-code:
          context: dnt-k8s-dev-beta
          filters:
            branches:
              only:
                - vault_testing
